name: Rust

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

env:
  RUSTDOCFLAGS: -D warnings
  RUSTFLAGS: -D warnings
  RUST_BACKTRACE: 1

jobs:
  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - run: sudo ./ci/setup-debian.sh
      - run: cargo clippy --all-features --all-targets

  test:
    strategy:
        fail-fast: false
        matrix:
          include:
            - target: x86_64-unknown-linux-gnu
              os: ubuntu-latest
              cargo: cargo
            - target: aarch64-unknown-linux-gnu
              os: ubuntu-latest
              cargo: cross
            # FIXME: SFML_* env variables don't seem to do anything, build can't
            # find the libraries.
            # - target: armv7-unknown-linux-musleabihf
            #   os: ubuntu-latest
            #   cargo: cross
            # FIXME: figure out install location from vcpkg
            # - target: x86_64-pc-windows-msvc
            #   os: windows-latest
            #   cargo: cargo
            # - target: x86_64-pc-windows-gnu
            #   os: windows-latest
            #   cargo: cargo
            # FIXME: libsfml linking errors
            # - target: x86_64-apple-darwin
            #   os: macos-latest
            #   cargo: cargo
            - target: aarch64-apple-darwin
              os: macos-14
              cargo: cargo
    name: "test ${{ matrix.target }}"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - if: matrix.cargo == 'cross'
        # FIXME: just use this action once there is a new release with newer
        # docker images
        # uses: taiki-e/install-action@cross
        run: >
          cargo install \
            --git https://github.com/cross-rs/cross.git \
            --rev 19be83481fd3e50ea103d800d72e0f8eddb1c90c \
            cross
        
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}

      - if: contains(matrix.os, 'ubuntu') && matrix.cargo == 'cargo'
        run: sudo ./ci/setup-debian.sh
      - if: contains(matrix.target, 'musl') && matrix.cargo == 'cargo'
        run: sudo apt-get install musl-tools
      - if: contains(matrix.os, 'macos') && matrix.cargo == 'cargo'
        run: ./ci/setup-macos.sh
      - if: contains(matrix.os, 'windows') && matrix.cargo == 'cargo'
        run: vcpkg install sfml

      - name: Test Rust and C packages
        run: >
          ${{ matrix.cargo }} test \
            --features _skip-hil-testing \
            --target ${{ matrix.target }} \
            --package mic2 -vv
          ${{ matrix.cargo }} test \
            --target ${{ matrix.target }} \
            --package libmic2 -vv
        shell: bash
        if: '!matrix.notest'
      - name: Test python package (native only)
        if: matrix.cargo == 'cargo'
        run: >
          ${{ matrix.cargo }} test \
            --target ${{ matrix.target }} \
            --package mic2_python

  fmt:
    name: formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
            components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check
  
  doc:
    name: docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - run: sudo ./ci/setup-debian.sh
      - run: cargo doc
